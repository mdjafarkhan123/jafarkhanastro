<header class="header">
    <div class="header__container">
        <div class="header__nav">
            <div class="header__logo">
                <a href="/">
                    <svg
                        width="40"
                        height="40"
                        viewBox="0 0 40 40"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M29.2338 37.5381L39.75 39.875L37.4131 29.3587C38.9044 26.5699 39.75 23.3837 39.75 20C39.75 9.02334 30.8517 0.125 19.875 0.125C8.89843 0.125 0 9.02334 0 20C0 30.9766 8.89843 39.875 19.875 39.875C23.2587 39.875 26.4449 39.0295 29.2338 37.5381ZM28.6583 33.3381L27.3594 34.0327C25.0773 35.2531 22.5273 35.9 19.875 35.9C11.0936 35.9 3.975 28.7814 3.975 20C3.975 11.2187 11.0936 4.1 19.875 4.1C28.6563 4.1 35.775 11.2187 35.775 20C35.775 22.6523 35.1281 25.2023 33.9078 27.4843L33.2132 28.7832L34.5146 34.6395L28.6583 33.3381ZM29.8125 20H25.8375C25.8375 23.2931 23.1681 25.9625 19.875 25.9625C16.5819 25.9625 13.9125 23.2931 13.9125 20H9.9375C9.9375 25.4883 14.3867 29.9375 19.875 29.9375C25.3633 29.9375 29.8125 25.4883 29.8125 20Z"
                            fill="#17F700"></path>
                    </svg>
                </a>
            </div>
            <div class="header__action">
                <a href="/contact" class="btn"> Get in touch </a>
            </div>
            <div class="header__toggler">
                <span></span>
                <span></span>
            </div>
            <div class="header__menu header__menu-wrapper">
                <svg
                    class="transition"
                    viewBox="0 0 100 100"
                    preserveAspectRatio="none"
                >
                    <path
                        class="path"
                        fill="var(--color-bg-white)"
                        dur="10s"
                        vector-effect="non-scaling-stroke"
                        d="M 0 100 L 100 100 100 100 0 100 C 0 0, 0 0, 0 100"
                    ></path>
                </svg>
                <ul class="header__menu-items">
                    <li class="header__menu-item">
                        <a href="/" class="header__menu-item-link">Home</a>
                    </li>
                    <li class="header__menu-item">
                        <a href="/#about" class="header__menu-item-link"
                            >About</a
                        >
                    </li>
                    <li class="header__menu-item">
                        <a href="/works" class="header__menu-item-link">Works</a
                        >
                    </li>
                    <li class="header__menu-item">
                        <a href="/contact" class="header__menu-item-link"
                            >Contact</a
                        >
                    </li>
                </ul>
            </div>
        </div>
    </div>
</header>
<script>
    let path = document.querySelector(".path");

    function lerp(start, end, t) {
        return (start * (1 - t) + end * t).toFixed(3);
    }

    let toggle = false;
    let y = 100;
    let c = 100;
    let animationFrame;
    let menuToggle = document.querySelector(".header__toggler");
    let ul = document.querySelector(".header__menu-items");

    menuToggle.addEventListener("click", () => {
        toggle = !toggle;
        cancelAnimationFrame(animationFrame);
        animate();

        if (toggle) {
            ul.style.display = "block";
        } else {
            setTimeout(() => {
                ul.style.display = "none";
            }, 0);
        }
    });

    function animate() {
        if (toggle) {
            y = lerp(y, 0, 0.099);
            c = lerp(c, 0, 0.125);
        } else {
            y = lerp(y, 100, 0.099);
            c = lerp(c, 100, 0.125); // Changed from 0.15 to match opening speed
        }
        path.setAttribute(
            "d",
            `M 0 ${y} L 0 100 100 100 100 ${y} C ${50} ${c}, ${50} ${c}, 0 ${y}`
        );
        if ((toggle && y < 1 && c < 1) || (!toggle && y > 99 && c > 99)) {
            cancelAnimationFrame(animationFrame);
            return;
        }

        animationFrame = requestAnimationFrame(animate);
    }
</script>

<style lang="scss">
    .header {
        position: relative;
        z-index: 3;
        background-color: var(--color-bg-dark);
        &__container {
            max-width: 1920px;
            display: flex;
            padding-block: 0.5em;
            padding-inline: 1em;
            z-index: inherit;
        }

        &__nav {
            display: flex;
            width: 100%;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
            z-index: inherit;
        }
        &__logo {
            cursor: pointer;
            flex-grow: 1;
            z-index: inherit;
        }

        &__action {
            .btn {
                font-size: clamp(0.875rem, 0.709rem + 0.698vw, 1.25rem);
                color: var(--color-text-white);
                padding: clamp(0.625rem, 0.459rem + 0.698vw, 1rem)
                    clamp(1.25rem, 0.952rem + 1.19vw, 1.875rem);
            }
        }

        &__toggler {
            --size: 65px;
            display: flex;
            width: var(--size);
            height: var(--size);
            flex-flow: column;
            justify-content: center;
            align-items: center;
            padding: 10px;
            background-color: var(--color-primary);
            border-radius: 100px;
            gap: 5px;
            cursor: pointer;
            z-index: inherit;
            span {
                display: block;
                width: 30px;
                height: 2px;
                background-color: var(--color-bg-dark);
            }
        }
        &__menu {
            position: fixed;
            width: 100%;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            left: 0;
            top: 0;
            z-index: 1;

            .transition {
                position: absolute;
                left: 0;
                top: -20px;
                width: 100%;
                min-height: calc(100vh + 40px);
                z-index: inherit;
            }

            &-items {
                display: none;
                z-index: 2;
                .active {
                    display: block;
                }
            }
        }
    }
</style>
